---
title: "smallRNA Differential Expression"
author: "Lance Parsons"
format:
  html:
    toc: true
    code-fold: true
    df-print: paged
    embed-resources: true
editor: source
---

```{r}
#| label: load-packages
#| include: false
#| message: false
library("readr")
library("dplyr")
library("tidyr")
library("stringr")
library("tibble")
library("pheatmap")
library("ggplot2")
library("ggrepel")
library("DESeq2")
library("apeglm")
library("EnsDb.Hsapiens.v86")
library("RColorBrewer")
library("BiocParallel")
library("Biostrings")
register(MulticoreParam(4))
```

## Read data

{{< include _sample-metadata.qmd >}}

## small RNA gene counts

* count only fragments that were properly aligned
* annotate with GENCODE gene model
* primary alignments were counted, even if the fragments aligned multiple times
* fragments aligning to multiple features were assigned to the feature that mostly closely overlapped with the fragment
* exogenous RNA counts are total fragments that aligned

```{r import_smrna_counts}
human_counts_dir <- "results/smrna_count/"
gene_counts_files <- paste0(
  human_counts_dir,
  sample_units$sample_unit,
  "_first_proper_pair_gene_count.txt"
)

exogenous_counts_dir <- "results/exogenous_rna_count/"
exogenous_counts_files <- paste0(
  exogenous_counts_dir,
  sample_units$sample_unit,
  "_idxstats.txt"
)

gene_counts <- readr::read_tsv(
  gene_counts_files[1],
  comment = "#",
  col_names = c("gene", gene_counts_files[1]),
  col_types = "ci"
)
exogenous_counts <- read_tsv(
  exogenous_counts_files[1],
  col_names = c("gene", gene_counts_files[1]),
  col_types = "c-i-"
)
gene_counts <- rbind(gene_counts, exogenous_counts)

for (i in 2:length(gene_counts_files)) {
  gene_sample <-
    readr::read_tsv(
      gene_counts_files[i],
      comment = "#",
      col_names = c("gene", gene_counts_files[i]),
      col_types = "ci"
    )
  exogenous_counts_sample <- read_tsv(
    exogenous_counts_files[i],
    col_names = c("gene", gene_counts_files[i]),
    col_types = "c-i-"
  )
  gene_sample <- rbind(gene_sample, exogenous_counts_sample)
  gene_counts <- gene_counts %>%
    dplyr::full_join(gene_sample, by = "gene")
}

gene_counts <- gene_counts %>%
  rename_all(~ stringr::str_replace_all(
    ., human_counts_dir, ""
  )) %>%
  rename_all(~ str_replace_all(., "_first_proper_pair_gene_count.txt", ""))

gene_counts
```

```{r}
# List of exogenous genes to highlight
exogenous_rna_names <- gene_counts %>%
  dplyr::filter(str_detect(gene, "^PJY")) %>%
  pull(gene)
```

### Import sample metadata and counts into DESeq2

Read these counts into DESeq2 along with the sample metadata.

Set the design to `~ exogenous_rna + day + cell_line`.

```{r}
dds <- DESeqDataSetFromMatrix(
  countData = gene_counts %>%
    tibble::column_to_rownames("gene") %>%
    replace(is.na(.), 0),
  colData = sample_units,
  design = ~ exogenous_rna + day + cell_line
)
dds
```
### Sample comparisons

#### Variance Stabalized Transformation

```{r}
vsd <- vst(dds, blind = FALSE)
```

#### Heatmap of sample-to-sample distances

```{r}
sample_dists <- dist(t(assay(vsd)))

sample_dist_matrix <- as.matrix(sample_dists)
rownames(sample_dist_matrix) <- paste(vsd$cell_line,
  vsd$exogenous_rna,
  vsd$day,
  sep = "-"
)
colnames(sample_dist_matrix) <- NULL
```

```{r fig.height=8, fig.width=10}
#| fig-height: 8
#| fig-width: 10
colors <- colorRampPalette(rev(brewer.pal(9, "Blues")))(255)
pheatmap(sample_dist_matrix,
  clustering_distance_rows = sample_dists,
  clustering_distance_cols = sample_dists,
  col = colors
)
```

#### PCA plot of samples
```{r fig.height=4, fig.width=8}
#| fig-height: 6
#| fig-width: 6
plotPCA(vsd, intgroup = c("cell_line", "exogenous_rna", "day"))
```

## Differetial Expression

### Batch 2 - Day 1

Select subset of samples then calculate the log2 fold change:
`cell line` `P1E10` vs `Parental` 
```{r}
#| cache: true
dds_batch2_day1 <- subset(dds, select = colData(dds)$batch == "batch2" &
  colData(dds)$day == "day1")
dds_batch2_day1$exogenous_rna <- droplevels(dds_batch2_day1$exogenous_rna)
dds_batch2_day1$day <- droplevels(dds_batch2_day1$day)
design(dds_batch2_day1) <- ~ exogenous_rna + cell_line
dds_batch2_day1 <- DESeq(dds_batch2_day1, parallel = TRUE)
dds_batch2_day1
```

```{r}
res_batch2_day1 <- results(dds_batch2_day1, alpha = 0.05)
res_batch2_day1
summary(res_batch2_day1)
```


#### Log fold change shrinkage

Run [log fold change shrinkage](http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#log-fold-change-shrinkage-for-visualization-and-ranking) to account for low counts.

```{r}
res_batch2_day1_lfc <- lfcShrink(dds_batch2_day1,
  coef = "cell_line_P1E10_vs_Parental",
  type = "apeglm", parallel = TRUE
)
```

#### MA Plot (lfc shrunk)

MA Plot of shrunken log2 fold changes
```{r fig.height=10, fig.width=10}
res_batch2_day1_lfc_df <- res_batch2_day1_lfc %>%
  as.data.frame() %>%
  rownames_to_column("gene") %>%
  dplyr::mutate(significant = padj < 0.05)

write_tsv(res_batch2_day1_lfc_df, file = "diffexp_results_batch2_day1.tsv")

res_batch2_day1_lfc_labelled <- res_batch2_day1_lfc_df %>%
  dplyr::filter(gene %in% exogenous_rna_names) %>%
  na.omit()

ggplot(
  res_batch2_day1_lfc_df,
  aes(x = log2(baseMean), y = log2FoldChange, colour = significant)
) +
  geom_point() +
  ggrepel::geom_label_repel(
    data = res_batch2_day1_lfc_labelled,
    aes(label = gene, segment.colour = "black"),
    min.segment.length = 0
  ) +
  theme_bw()
```

#### Counts of exogenous rna

Plot of counts for a single gene (with lowest adjusted p-value)
```{r}
plot_list <- list()
for (gene in res_batch2_day1_lfc_labelled$gene) {
  gene_prefix <- str_split(gene, "_")[[1]][1]
  d <- plotCounts(dds_batch2_day1,
    gene = gene,
    intgroup = "cell_line",
    returnData = TRUE
  )
  p <- ggplot(
    d %>%
      rownames_to_column("sample_unit") %>%
      dplyr::filter(grepl(gene_prefix, sample_unit)),
    aes(x = cell_line, y = count)
  ) +
    geom_point(position = position_jitter(width = 0.1, height = 0)) +
    ggtitle(gene)
  plot_list[[gene]] <- p
}
cowplot::plot_grid(plotlist = plot_list)
```


### Batch 2 - Day 2

Select subset of samples then calculate the log2 fold change:
`cell line` `P1E10` vs `Parental` 
```{r}
#| cache: true
dds_batch2_day2 <- subset(dds, select = colData(dds)$batch == "batch2" &
  colData(dds)$day == "day2")
dds_batch2_day2$exogenous_rna <- droplevels(dds_batch2_day2$exogenous_rna)
dds_batch2_day2$day <- droplevels(dds_batch2_day2$day)
design(dds_batch2_day2) <- ~ exogenous_rna + cell_line
dds_batch2_day2 <- DESeq(dds_batch2_day2, parallel = TRUE)
dds_batch2_day2
```

```{r}
res_batch2_day2 <- results(dds_batch2_day2, alpha = 0.05)
res_batch2_day2
summary(res_batch2_day2)
```


#### Log fold change shrinkage

Run [log fold change shrinkage](http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#log-fold-change-shrinkage-for-visualization-and-ranking) to account for low counts.

```{r}
res_batch2_day2_lfc <- lfcShrink(dds_batch2_day2,
  coef = "cell_line_P1E10_vs_Parental",
  type = "apeglm", parallel = TRUE
)
```

#### MA Plot (lfc shrunk)

MA Plot of shrunken log2 fold changes
```{r fig.height=10, fig.width=10}
res_batch2_day2_lfc_df <- res_batch2_day2_lfc %>%
  as.data.frame() %>%
  rownames_to_column("gene") %>%
  dplyr::mutate(significant = padj < 0.05)

write_tsv(res_batch2_day2_lfc_df, file = "diffexp_results_batch2_day2.tsv")

res_batch2_day2_lfc_labelled <- res_batch2_day2_lfc_df %>%
  dplyr::filter(gene %in% exogenous_rna_names) %>%
  na.omit()

ggplot(
  res_batch2_day2_lfc_df,
  aes(x = log2(baseMean), y = log2FoldChange, color = significant)
) +
  geom_point() +
  ggrepel::geom_label_repel(
    data = res_batch2_day2_lfc_labelled,
    aes(label = gene, segment.colour = "black"),
    min.segment.length = 0
  ) +
  theme_bw()
```


Plot of counts for a single gene (with lowest adjusted p-value)
```{r}
plot_list <- list()
for (gene in res_batch2_day2_lfc_labelled$gene) {
  gene_prefix <- str_split(gene, "_")[[1]][1]
  d <- plotCounts(dds_batch2_day2,
    gene = gene,
    intgroup = "cell_line",
    returnData = TRUE
  )
  p <- ggplot(
    d %>%
      rownames_to_column("sample_unit") %>%
      dplyr::filter(grepl(gene_prefix, sample_unit)),
    aes(x = cell_line, y = count)
  ) +
    geom_point(position = position_jitter(width = 0.1, height = 0)) +
    ggtitle(gene)
  plot_list[[gene]] <- p
}
cowplot::plot_grid(plotlist = plot_list)
```


### Batch 3 - Day 1

Select subset of samples then calculate the log2 fold change:
`cell line` `P1E10` vs `Parental` 
```{r}
#| cache: true
dds_batch3_day1 <- subset(dds, select = colData(dds)$batch == "batch3" &
  colData(dds)$day == "day1")
dds_batch3_day1$exogenous_rna <- droplevels(dds_batch3_day1$exogenous_rna)
dds_batch3_day1$day <- droplevels(dds_batch3_day1$day)
design(dds_batch3_day1) <- ~ exogenous_rna + cell_line
dds_batch3_day1 <- DESeq(dds_batch3_day1, parallel = TRUE)
dds_batch3_day1
```

```{r}
res_batch3_day1 <- results(dds_batch3_day1, alpha = 0.05)
res_batch3_day1
summary(res_batch3_day1)
```


#### Log fold change shrinkage

Run [log fold change shrinkage](http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#log-fold-change-shrinkage-for-visualization-and-ranking) to account for low counts.


```{r}
res_batch3_day1_lfc <- lfcShrink(dds_batch3_day1,
  coef = "cell_line_P1E10_vs_Parental",
  type = "apeglm", parallel = TRUE
)
```

#### MA Plot (lfc shrunk)

MA Plot of shrunken log2 fold changes
```{r fig.height=10, fig.width=10}
res_batch3_day1_lfc_df <- res_batch3_day1_lfc %>%
  as.data.frame() %>%
  rownames_to_column("gene") %>%
  dplyr::mutate(significant = padj < 0.05)

write_tsv(res_batch3_day1_lfc_df, file = "diffexp_results_batch3_day1.tsv")

res_batch3_day1_lfc_labelled <- res_batch3_day1_lfc_df %>%
  dplyr::filter(gene %in% exogenous_rna_names) %>%
  na.omit()

ggplot(
  res_batch3_day1_lfc_df,
  aes(x = log2(baseMean), y = log2FoldChange, colour = significant)
) +
  geom_point() +
  ggrepel::geom_label_repel(
    data = res_batch3_day1_lfc_labelled,
    aes(label = gene, segment.colour = "black"),
    min.segment.length = 0
  ) +
  theme_bw()
```

#### Counts of exogenous rna

Plot of counts for a single gene (with lowest adjusted p-value)
```{r fig.height=25, fig.width=10}
plot_list <- list()
for (gene in res_batch3_day1_lfc_labelled$gene) {
  exogenous_rna <- rna_mixes %>%
    dplyr::filter(rna_species == gene) %>%
    pull(exogenous_rna)
  exogenous_rna_regex <- paste(exogenous_rna, collapse = "|")

  d <- plotCounts(dds_batch3_day1,
    gene = gene,
    intgroup = "cell_line",
    returnData = TRUE
  )
  p <- ggplot(
    d %>%
      rownames_to_column("sample_unit") %>%
      dplyr::filter(grepl(exogenous_rna_regex, sample_unit)),
    aes(x = cell_line, y = count)
  ) +
    geom_point(position = position_jitter(width = 0.1, height = 0)) +
    ggtitle(gene)
  plot_list[[gene]] <- p
}
cowplot::plot_grid(plotlist = plot_list, ncol = 2)
```



### Batch 3 - Day 2

Select subset of samples then calculate the log2 fold change:
`cell line` `P1E10` vs `Parental` 
```{r}
#| cache: true
dds_batch3_day2 <- subset(dds, select = colData(dds)$batch == "batch3" &
  colData(dds)$day == "day2")
dds_batch3_day2$exogenous_rna <- droplevels(dds_batch3_day2$exogenous_rna)
dds_batch3_day2$day <- droplevels(dds_batch3_day2$day)
design(dds_batch3_day2) <- ~ exogenous_rna + cell_line
dds_batch3_day2 <- DESeq(dds_batch3_day2, parallel = TRUE)
dds_batch3_day2
```

```{r}
res_batch3_day2 <- results(dds_batch3_day2, alpha = 0.05)
res_batch3_day2
summary(res_batch3_day2)
```


#### Log fold change shrinkage

Run [log fold change shrinkage](http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#log-fold-change-shrinkage-for-visualization-and-ranking) to account for low counts.


```{r}
res_batch3_day2_lfc <- lfcShrink(dds_batch3_day2,
  coef = "cell_line_P1E10_vs_Parental",
  type = "apeglm", parallel = TRUE
)
```

#### MA Plot (lfc shrunk)

MA Plot of shrunken log2 fold changes
```{r fig.height=10, fig.width=10}
res_batch3_day2_lfc_df <- res_batch3_day2_lfc %>%
  as.data.frame() %>%
  rownames_to_column("gene") %>%
  dplyr::mutate(significant = padj < 0.05)

write_tsv(res_batch3_day2_lfc_df, file = "diffexp_results_batch3_day2.tsv")

res_batch3_day2_lfc_labelled <- res_batch3_day2_lfc_df %>%
  dplyr::filter(gene %in% exogenous_rna_names) %>%
  na.omit()

ggplot(
  res_batch3_day2_lfc_df,
  aes(x = log2(baseMean), y = log2FoldChange, colour = significant)
) +
  geom_point() +
  ggrepel::geom_label_repel(
    data = res_batch3_day2_lfc_labelled,
    aes(label = gene, segment.colour = "black"),
    min.segment.length = 0
  ) +
  theme_bw()
```

#### Counts of exogenous rna

Plot of counts for a single gene (with lowest adjusted p-value)
```{r fig.height=25, fig.width=10}
plot_list <- list()
for (gene in res_batch3_day2_lfc_labelled$gene) {
  exogenous_rna <- rna_mixes %>%
    dplyr::filter(rna_species == gene) %>%
    pull(exogenous_rna)
  exogenous_rna_regex <- paste(exogenous_rna, collapse = "|")

  d <- plotCounts(dds_batch3_day2,
    gene = gene,
    intgroup = "cell_line",
    returnData = TRUE
  )
  p <- ggplot(
    d %>%
      rownames_to_column("sample_unit") %>%
      dplyr::filter(grepl(exogenous_rna_regex, sample_unit)),
    aes(x = cell_line, y = count)
  ) +
    geom_point(position = position_jitter(width = 0.1, height = 0)) +
    ggtitle(gene)
  plot_list[[gene]] <- p
}
cowplot::plot_grid(plotlist = plot_list, ncol = 2)
```
